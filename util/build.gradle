apply plugin: 'maven'
apply plugin: 'signing'

group = project.parent.group
version = project.parent.version

ext {
  assertjVersion = '3.2.0'
  junitVersion = '4.12'
}

dependencies {
  testCompile(
      "org.assertj:assertj-core:${assertjVersion}",
      "junit:junit:${junitVersion}"
  )
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'datawire-util'
        packaging 'jar'
        description 'Datawire Commons Utilities'
        url 'https://github.com/datawire/datawire-commons'

        scm {
          connection 'scm:git:git://github.com:datawire/datawire-commons.git'
          developerConnection 'scm:git:git://github.com:datawire/datawire-commons.git'
          url 'https://github.com/datawire/datawire-commons'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'plombardi'
            name 'Philip Lombardi'
            email 'plombardi@datawire.io'
          }
        }
      }
    }
  }
}